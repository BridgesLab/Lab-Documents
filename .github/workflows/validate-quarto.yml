name: Validate Quarto Documents

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Set up Tex
        uses: r-lib/actions/setup-tinytex@v2

      - name: Install required packages
        run: |
          # Function to extract library() calls from qmd files
          extract_packages <- function(file) {
            content <- readLines(file)
            library_calls <- grep("^library\\(", content, value = TRUE)
            gsub("library\\(([^)]+)\\)", "\\1", library_calls)
          }
          
          # Get all qmd files
          qmd_files <- list.files(pattern = "\\.qmd$", recursive = TRUE)
          
          # Extract unique packages from all qmd files
          packages <- unique(unlist(lapply(qmd_files, extract_packages)))
          
          # Install packages
          install.packages(packages)
        shell: Rscript {0}

      - name: Render Quarto Documents
        run: |
          quarto_files <- list.files(pattern = "\\.qmd$", recursive = TRUE)
          lapply(quarto_files, function(file) {
            tryCatch({
              quarto::quarto_render(file)
              cat(sprintf("Successfully rendered %s\n", file))
            }, error = function(e) {
              cat(sprintf("Error rendering %s: %s\n", file, e$message))
              quit(status = 1)
            })
          })
        shell: Rscript {0}